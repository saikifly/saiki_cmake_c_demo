CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
PROJECT(APP)

SET(CMAKE_C_STANDARD 11)
SET(CMAKE_VERBOSE_MAKEFILE ON)
SET(APP_ROOT_DIR ${PROJECT_SOURCE_DIR})

SET(TD_OS_LINUX FALSE)

IF (${CMAKE_SYSTEM_NAME} MATCHES "Linux")
    SET(APP_LINUX TRUE)
    ADD_DEFINITIONS(-DLINUX)

    IF (${CMAKE_CXX_COMPILER_ID} MATCHES "Clang")
        SET(COMMON_FLAGS "-std=gnu99 -Wall -fPIC -malign-double -g -Wno-char-subscripts -msse4.2 -D_FILE_OFFSET_BITS=64 -D_LARGE_FILE")
    ELSE ()
        SET(COMMON_FLAGS "-std=gnu99 -Wall -fPIC -malign-double -g -Wno-char-subscripts -malign-stringops -msse4.2 -D_FILE_OFFSET_BITS=64 -D_LARGE_FILE")
    ENDIF ()

    SET(DEBUG_FLAGS "-O0 -DDEBUG")
    SET(RELEASE_FLAGS "-O0")

    ADD_DEFINITIONS(-D_REENTRANT -D__USE_POSIX -D_LIBC_REENTRANT)

    IF (${CMAKE_SIZEOF_VOID_P} MATCHES 8)
        MESSAGE(STATUS "The current platform is Linux 64-bit")
        ADD_DEFINITIONS(-D_M_X64)
    ELSE ()
        MESSAGE(FATAL_ERROR "The current platform is Linux 32-bit, not supported yet")
        EXIT()
    ENDIF ()

ELSE ()

    MESSAGE(FATAL_ERROR "The current platform is not Linux, stop compile")
    EXIT()

ENDIF ()

## Set compiler options
SET(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} ${COMMON_FLAGS} ${DEBUG_FLAGS}")
SET(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} ${COMMON_FLAGS} ${RELEASE_FLAGS}")

IF (${CMAKE_BUILD_TYPE} MATCHES "Release")
    MESSAGE(STATUS "Build Release Version")
ELSE ()
    SET(CMAKE_BUILD_TYPE "Debug")
    MESSAGE(STATUS "Build Debug Version")
ENDIF ()

SET(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/build/${CMAKE_BUILD_TYPE}/lib)
SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/build/${CMAKE_BUILD_TYPE}/bin)
SET(APP_TESTS_OUTPUT_DIR ${PROJECT_SOURCE_DIR}/build/${CMAKE_BUILD_TYPE}/test)

MESSAGE(STATUS "Project source directory: " ${PROJECT_SOURCE_DIR})
MESSAGE(STATUS "Project binary files output path: " ${PROJECT_BINARY_DIR})
MESSAGE(STATUS "Project executable files output path: " ${EXECUTABLE_OUTPUT_PATH})
MESSAGE(STATUS "Project library files output path: " ${LIBRARY_OUTPUT_PATH})

ADD_SUBDIRECTORY(deps)
ADD_SUBDIRECTORY(src)

INCLUDE(CPack)
